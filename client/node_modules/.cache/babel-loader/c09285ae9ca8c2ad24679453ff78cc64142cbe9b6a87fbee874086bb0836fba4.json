{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lploe\\\\to-do\\\\src\\\\components\\\\To-do\\\\Storage.jsx\",\n  _s = $RefreshSig$();\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n// Importing React Hooks\nimport { useState, useEffect } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Storage() {\n  _s();\n  // All States\n\n  const [tasks, setTasks] = useState([]); // Task State\n  const [showAddTask, setShowAddTask] = useState(false); // To reveal add task form\n  // Pre-loader\n\n  // Fetching from Local Storage\n  const getTasks = JSON.parse(localStorage.getItem(\"taskAdded\"));\n  useEffect(() => {\n    if (getTasks == null) {\n      setTasks([]);\n    } else {\n      setTasks(getTasks);\n    }\n  }, []);\n  // Add Task\n  const addTask = task => {\n    const id = uuidv4();\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n    localStorage.setItem(\"taskAdded\", JSON.stringify([...tasks, newTask]));\n  };\n  // Delete Task\n  const deleteTask = id => {\n    const deleteTask = tasks.filter(task => task.id !== id);\n    setTasks(deleteTask);\n    localStorage.setItem(\"taskAdded\", JSON.stringify(deleteTask));\n  };\n  // Edit Task\n  const editTask = id => {\n    const text = prompt(\"Task Name\");\n    const day = prompt(\"Day and Time\");\n    let data = JSON.parse(localStorage.getItem('taskAdded'));\n    const myData = data.map(x => {\n      if (x.id === id) {\n        return {\n          ...x,\n          text: text,\n          day: day,\n          id: uuidv4()\n        };\n      }\n      return x;\n    });\n    localStorage.setItem(\"taskAdded\", JSON.stringify(myData));\n    window.location.reload();\n  };\n  retun( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinnerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-grow text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-grow text-secondary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-grow text-success\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-grow text-danger\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-grow text-warning\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        showForm: () => setShowAddTask(!showAddTask),\n        changeTextAndColor: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onSave: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Number of Tasks: \", tasks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onEdit: editTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 34\n      }, this) : 'No Task Found!']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }, this)\n  }, void 0, false));\n}\n\n// export default Storage;\n\n// import React from 'react';\n// import './todo.css';\n// import { useState, useEffect } from \"react\";\n// import pencilimg from '../../Assets/redpencil.png';\n// // import Job from './Job'\n\n// const Storage = () => {\n\n//   const [tasks, setTasks] = useState(() => {\n\n//     const savedTasks = localStorage.getItem(\"tasks\");\n//     if (savedTasks) {\n//       return JSON.parse(savedTasks);\n//     } else {\n//       return [];\n//     }\n//   });\n//   const [task, setTask] = useState(\"\");\n\n//   useEffect(() => {\n//     localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n//   }, [tasks]);\n\n//   function handleInputChange(e) {\n//     setTask(e.target.value);\n//   }\n//   function handleFormSubmit(e) {\n//     e.preventDefault();\n\n//     if (task !== \"\") {\n//       setTasks([\n//         ...tasks,\n//         {\n//           id: tasks.length + 1,\n//           text: task.trim()\n//         }\n//       ]);\n//     }\n\n//     setTask(\"\");\n//   }\n\n//   function handleDeleteClick(id) {\n//     const removeItem = tasks.filter((task) => {\n//       return task.id !== id;\n//     });\n//     setTasks(removeItem);\n//   }\n//   const editTask = (id) => {\n\n//     let data = JSON.parse(localStorage.getItem('task'));\n//     const myData = data.map(task => {\n//         if (task.id === id) {\n//             return {\n//                 ...tasks,\n\n//         return task;\n//           }\n//   } ) \n\n//     localStorage.setItem(\"taskAdded\", JSON.stringify(myData));\n//     window.location.reload();\n// }\n\n//     return (\n//       <div>\n//         <img\n//           className='pencil_img'\n//           src={pencilimg}\n//         />\n//         <form className='search' onSubmit={handleFormSubmit}>\n\n//           <input className='taskbar'\n//             name=\"imput_task\"\n//             type=\"text\"\n//             placeholder=\"add todo\"\n//             value={task}\n//             onChange={handleInputChange}\n//           />\n//         </form>\n//         <ul className=\"task-list\">\n//           {tasks.map((task) => (\n//             <li key={task.id}> {task.text}\n//               <button className='edit' onClick={() => editTask(task.id)}>edit</button>\n//               <button className='delete' onClick={() => handleDeleteClick(task.id)}>delete</button></li>\n\n//           ))}\n//         </ul>\n//       </div>\n//     );\n//           }\n// ;\n_s(Storage, \"PLX2zQ+tVGuPD20Z1DPltP04Zzk=\");\n_c = Storage;\nexport default Storage;\nvar _c;\n$RefreshReg$(_c, \"Storage\");","map":{"version":3,"names":["Header","Tasks","AddTask","useState","useEffect","Storage","tasks","setTasks","showAddTask","setShowAddTask","getTasks","JSON","parse","localStorage","getItem","addTask","task","id","uuidv4","newTask","setItem","stringify","deleteTask","filter","editTask","text","prompt","day","data","myData","map","x","window","location","reload","retun","loading","length"],"sources":["C:/Users/lploe/to-do/src/components/To-do/Storage.jsx"],"sourcesContent":["import Header from './components/Header';\r\nimport Tasks from './components/Tasks';\r\nimport AddTask from './components/AddTask';\r\n// Importing React Hooks\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Storage() {\r\n    // All States\r\n    \r\n    const [tasks, setTasks] = useState([]); // Task State\r\n    const [showAddTask, setShowAddTask] = useState(false); // To reveal add task form\r\n    // Pre-loader\r\n   \r\n    // Fetching from Local Storage\r\n    const getTasks = JSON.parse(localStorage.getItem(\"taskAdded\"));\r\n    useEffect(() => {\r\n        if (getTasks == null) {\r\n            setTasks([])\r\n        } else {\r\n            setTasks(getTasks);\r\n        }\r\n    }, [])\r\n    // Add Task\r\n    const addTask = (task) => {\r\n        const id = uuidv4();\r\n        const newTask = { id, ...task }\r\n        setTasks([...tasks, newTask]);\r\n        \r\n        localStorage.setItem(\"taskAdded\", JSON.stringify([...tasks, newTask]));\r\n    }\r\n    // Delete Task\r\n    const deleteTask = (id) => {\r\n        const deleteTask = tasks.filter((task) => task.id !== id);\r\n        setTasks(deleteTask);\r\n        \r\n        localStorage.setItem(\"taskAdded\", JSON.stringify(deleteTask));\r\n    }\r\n    // Edit Task\r\n    const editTask = (id) => {\r\n        const text = prompt(\"Task Name\");\r\n        const day = prompt(\"Day and Time\");\r\n        let data = JSON.parse(localStorage.getItem('taskAdded'));\r\n        const myData = data.map(x => {\r\n            if (x.id === id) {\r\n                return {\r\n                    ...x,\r\n                    text: text,\r\n                    day: day,\r\n                    id: uuidv4()\r\n                }\r\n            }\r\n            return x;\r\n        })\r\n        \r\n        localStorage.setItem(\"taskAdded\", JSON.stringify(myData));\r\n        window.location.reload();\r\n    }\r\n    retun (\r\n      <>\r\n            {\r\n                loading ?\r\n                    <div className=\"spinnerContainer\">\r\n                        <div className=\"spinner-grow text-primary\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-secondary\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-success\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-danger\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div> :\r\n                    <div className=\"container\">\r\n                        {/* App Header that has open and App Name */}\r\n                        <Header showForm={() => setShowAddTask(!showAddTask)} changeTextAndColor={showAddTask} />\r\n                        {/* Revealing of Add Task Form */}\r\n                        {showAddTask && <AddTask onSave={addTask} />}\r\n                        {/* Task Counter */}\r\n                        <h3>Number of Tasks: {tasks.length}</h3>\r\n                        {/* Displaying of Tasks */}\r\n                        {\r\n                            tasks.length > 0 ?\r\n                                (<Tasks tasks={tasks} onDelete={deleteTask} onEdit={editTask} />) :\r\n                                ('No Task Found!')\r\n                        }\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n          \r\n// export default Storage;\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import './todo.css';\r\n// import { useState, useEffect } from \"react\";\r\n// import pencilimg from '../../Assets/redpencil.png';\r\n// // import Job from './Job'\r\n\r\n// const Storage = () => {\r\n\r\n//   const [tasks, setTasks] = useState(() => {\r\n\r\n//     const savedTasks = localStorage.getItem(\"tasks\");\r\n//     if (savedTasks) {\r\n//       return JSON.parse(savedTasks);\r\n//     } else {\r\n//       return [];\r\n//     }\r\n//   });\r\n//   const [task, setTask] = useState(\"\");\r\n\r\n\r\n//   useEffect(() => {\r\n//     localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n//   }, [tasks]);\r\n\r\n//   function handleInputChange(e) {\r\n//     setTask(e.target.value);\r\n//   }\r\n//   function handleFormSubmit(e) {\r\n//     e.preventDefault();\r\n\r\n//     if (task !== \"\") {\r\n//       setTasks([\r\n//         ...tasks,\r\n//         {\r\n//           id: tasks.length + 1,\r\n//           text: task.trim()\r\n//         }\r\n//       ]);\r\n//     }\r\n\r\n//     setTask(\"\");\r\n//   }\r\n\r\n//   function handleDeleteClick(id) {\r\n//     const removeItem = tasks.filter((task) => {\r\n//       return task.id !== id;\r\n//     });\r\n//     setTasks(removeItem);\r\n//   }\r\n//   const editTask = (id) => {\r\n  \r\n//     let data = JSON.parse(localStorage.getItem('task'));\r\n//     const myData = data.map(task => {\r\n//         if (task.id === id) {\r\n//             return {\r\n//                 ...tasks,\r\n        \r\n//         return task;\r\n//           }\r\n//   } ) \r\n\r\n//     localStorage.setItem(\"taskAdded\", JSON.stringify(myData));\r\n//     window.location.reload();\r\n// }\r\n\r\n\r\n//     return (\r\n//       <div>\r\n//         <img\r\n//           className='pencil_img'\r\n//           src={pencilimg}\r\n//         />\r\n//         <form className='search' onSubmit={handleFormSubmit}>\r\n\r\n//           <input className='taskbar'\r\n//             name=\"imput_task\"\r\n//             type=\"text\"\r\n//             placeholder=\"add todo\"\r\n//             value={task}\r\n//             onChange={handleInputChange}\r\n//           />\r\n//         </form>\r\n//         <ul className=\"task-list\">\r\n//           {tasks.map((task) => (\r\n//             <li key={task.id}> {task.text}\r\n//               <button className='edit' onClick={() => editTask(task.id)}>edit</button>\r\n//               <button className='delete' onClick={() => handleDeleteClick(task.id)}>delete</button></li>\r\n\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//     );\r\n//           }\r\n// ;\r\n\r\n\r\n\r\n\r\n  export default Storage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}