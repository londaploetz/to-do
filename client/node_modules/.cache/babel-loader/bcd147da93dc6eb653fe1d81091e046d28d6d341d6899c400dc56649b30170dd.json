{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lploe\\\\to-do\\\\src\\\\components\\\\To-do\\\\LocalStorage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './todo.css';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Storage = () => {\n  _s();\n  const [task, seTtask] = useTtate([]);\n  // need state to keep track of the value in the input\n  const [todo, setTodo] = useState(\"\");\n\n  // useEffect to run once the component mounts\n  useEffect(() => {\n    // localstorage only support storing strings as keys and values\n    // - therefore we cannot store arrays and objects without converting the object\n    // into a string first. JSON.stringify will convert the object into a JSON string\n    // reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\n    localStorage.setItem(\"task\", JSON.stringify(task));\n    // add the task as a dependancy because we want to update the\n    // localstorage anytime the task state changes\n  }, [task]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: task,\n      onChange: e => setTask(e.target.value),\n      placeholder: \"add to-do\",\n      \"aria-label\": \"fullname\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Storage, \"nzjcZefB2VOl8xHQoJUgpJDx02M=\", true);\n_c = Storage;\nexport default Storage;\nvar _c;\n$RefreshReg$(_c, \"Storage\");","map":{"version":3,"names":["React","useState","useEffect","Storage","task","seTtask","useTtate","todo","setTodo","localStorage","setItem","JSON","stringify","e","setTask","target","value"],"sources":["C:/Users/lploe/to-do/src/components/To-do/LocalStorage.jsx"],"sourcesContent":["import React from 'react';\r\nimport './todo.css';\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nconst Storage = () => {\r\n    const [task, seTtask] = useTtate([]);\r\n    // need state to keep track of the value in the input\r\n    const [todo, setTodo] = useState(\"\");\r\n  \r\n    // useEffect to run once the component mounts\r\n    useEffect(() => {\r\n      // localstorage only support storing strings as keys and values\r\n      // - therefore we cannot store arrays and objects without converting the object\r\n      // into a string first. JSON.stringify will convert the object into a JSON string\r\n      // reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\r\n      localStorage.setItem(\"task\", JSON.stringify(task));\r\n      // add the task as a dependancy because we want to update the\r\n      // localstorage anytime the task state changes\r\n    }, [task]);\r\n   \r\n return (\r\n    \r\n        <form>\r\n            <input\r\n                type=\"text\"\r\n                value={task}\r\n                onChange={(e) => setTask(e.target.value)}\r\n                placeholder=\"add to-do\"\r\n                aria-label=\"fullname\"\r\n            />\r\n            <input type=\"submit\" value=\"Add\"></input>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\n \r\n\r\nexport default Storage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAI5C,MAAMC,OAAO,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACAO,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;IAClD;IACA;EACF,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEb,oBAEO;IAAA,wBACI;MACI,IAAI,EAAC,MAAM;MACX,KAAK,EAAEA,IAAK;MACZ,QAAQ,EAAGS,CAAC,IAAKC,OAAO,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;MACzC,WAAW,EAAC,WAAW;MACvB,cAAW;IAAU;MAAA;MAAA;MAAA;IAAA,QACvB,eACF;MAAO,IAAI,EAAC,QAAQ;MAAC,KAAK,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACtC;AAEf,CAAC;AAAC,GA7BIb,OAAO;AAAA,KAAPA,OAAO;AAkCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}