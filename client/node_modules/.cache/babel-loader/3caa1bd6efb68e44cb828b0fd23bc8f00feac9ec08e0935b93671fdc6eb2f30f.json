{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport './todo.css';\nimport { useState, useEffect } from \"react\";\nconst Storage = () => {\n  _s();\n  const [task, setTask] = useState([]);\n  useEffect(() => {\n    localStorage.setItem(\"task\", JSON.stringify(task));\n  }, [task]);\n  function handleInputChange(e) {\n    // set the new state value to what's currently in the input box\n    setTodo(e.target.value);\n  }\n\n  // function to create a new object on form submit\n  function handleFormSubmit(e) {\n    // prevent the browser default behavior or refreshing the page on submit\n    e.preventDefault();\n\n    // don't submit if the input is an empty string\n    if (todo !== \"\") {\n      // set the new todos state (the array)\n      setTodos([\n      // copy the current values in state\n      ...todos, {\n        // setting a basic id to identify the object\n        id: todos.length + 1,\n        // set a text property to the value of the todo state and \n        // trim the whitespace from the input\n        text: todo.trim()\n      }]);\n    }\n\n    // clear out the input box\n    setTodo(\"\");\n  }\n};\n_s(Storage, \"I3GSAy+XdcJionI8zCBmPBZszgQ=\");\n_c = Storage;\nexport default Storage;\nvar _c;\n$RefreshReg$(_c, \"Storage\");","map":{"version":3,"names":["React","useState","useEffect","Storage","task","setTask","localStorage","setItem","JSON","stringify","handleInputChange","e","setTodo","target","value","handleFormSubmit","preventDefault","todo","setTodos","todos","id","length","text","trim"],"sources":["C:/Users/lploe/to-do/src/components/To-do/LocalStorage.jsx"],"sourcesContent":["import React from 'react';\r\nimport './todo.css';\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nconst Storage = () => {\r\n   \r\n const [task, setTask] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n      localStorage.setItem(\"task\", JSON.stringify(task));\r\n\r\n    }, [task]);\r\n   \r\n    function handleInputChange(e) {\r\n        // set the new state value to what's currently in the input box\r\n        setTodo(e.target.value);\r\n      }\r\n    \r\n      // function to create a new object on form submit\r\n      function handleFormSubmit(e) {\r\n        // prevent the browser default behavior or refreshing the page on submit\r\n        e.preventDefault();\r\n    \r\n        // don't submit if the input is an empty string\r\n        if (todo !== \"\") {\r\n          // set the new todos state (the array)\r\n          setTodos([\r\n            // copy the current values in state\r\n            ...todos,\r\n            {\r\n              // setting a basic id to identify the object\r\n              id: todos.length + 1,\r\n              // set a text property to the value of the todo state and \r\n              // trim the whitespace from the input\r\n              text: todo.trim()\r\n            }\r\n          ]);\r\n        }\r\n    \r\n        // clear out the input box\r\n        setTodo(\"\");\r\n      }\r\n};\r\n\r\n\r\n \r\n\r\nexport default Storage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAI3C,MAAMC,OAAO,GAAG,MAAM;EAAA;EAErB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAGjCC,SAAS,CAAC,MAAM;IACdI,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;EAEpD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,SAASM,iBAAiB,CAACC,CAAC,EAAE;IAC1B;IACAC,OAAO,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EACzB;;EAEA;EACA,SAASC,gBAAgB,CAACJ,CAAC,EAAE;IAC3B;IACAA,CAAC,CAACK,cAAc,EAAE;;IAElB;IACA,IAAIC,IAAI,KAAK,EAAE,EAAE;MACf;MACAC,QAAQ,CAAC;MACP;MACA,GAAGC,KAAK,EACR;QACE;QACAC,EAAE,EAAED,KAAK,CAACE,MAAM,GAAG,CAAC;QACpB;QACA;QACAC,IAAI,EAAEL,IAAI,CAACM,IAAI;MACjB,CAAC,CACF,CAAC;IACJ;;IAEA;IACAX,OAAO,CAAC,EAAE,CAAC;EACb;AACN,CAAC;AAAC,GAvCIT,OAAO;AAAA,KAAPA,OAAO;AA4Cb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}