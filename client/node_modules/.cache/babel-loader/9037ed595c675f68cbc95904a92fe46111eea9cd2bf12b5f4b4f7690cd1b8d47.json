{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lploe\\\\to-do\\\\src\\\\components\\\\To-do\\\\Storage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport View from './View';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Storage = () => {\n  _s();\n  const getData = () => {\n    const data = localStorage.getItem('jobs');\n    if (data) {\n      return JSON.parse(data);\n    } else {\n      return [];\n    }\n  };\n  const [jobs, setjobs] = useState(getData());\n  const [task, setTask] = useState('');\n  const handleAdd = e => {\n    e.preventDefault();\n    let job = {\n      id,\n      task\n    };\n    setjobs([...job, jobs]);\n    setTask('');\n  };\n  const deleteJob = id => {\n    const removeItem = jobs.filter((element, index) => {\n      return element.id !== id;\n    });\n    setjobs(removeItem);\n  };\n  useEffect(() => {\n    localStorage.setItem('jobs', JSON.stringify(jobs));\n  }, [jobs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search\",\n      onSubmit: handleAdd,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"taskbar\",\n        placeholder: \"add job\",\n        onChange: e => setTask(e.target.value),\n        value: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      jobs: jobs,\n      deleteJob: deleteJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Storage, \"LfB0qXWfRMCsOZTejxlv59S5cgc=\");\n_c = Storage;\nexport default Storage;\nvar _c;\n$RefreshReg$(_c, \"Storage\");","map":{"version":3,"names":["React","useState","useEffect","View","Storage","getData","data","localStorage","getItem","JSON","parse","jobs","setjobs","task","setTask","handleAdd","e","preventDefault","job","id","deleteJob","removeItem","filter","element","index","setItem","stringify","target","value"],"sources":["C:/Users/lploe/to-do/src/components/To-do/Storage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport View from './View'\r\n\r\n\r\nconst Storage = () => {\r\n\r\n\r\nconst getData = () => {\r\n    \r\n    const data = localStorage.getItem('jobs');\r\n    if (data) {\r\n        return JSON.parse(data);\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\n    const [jobs, setjobs] = useState(getData());\r\n\r\n    const [task, setTask] = useState('');\r\n\r\n\r\n    const handleAdd = (e) => {\r\n        e.preventDefault();\r\n\r\n        let job = {\r\n             id,\r\n             task\r\n        }\r\n    \r\n\r\n    setjobs([...job, jobs]);\r\n    setTask('');\r\n}\r\n\r\nconst deleteJob = (id) => {\r\n    const removeItem = jobs.filter((element, index) => {\r\n        return element.id !== id\r\n    })\r\n\r\n    setjobs(removeItem)\r\n}\r\n\r\nuseEffect(() => {\r\n    localStorage.setItem('jobs', JSON.stringify(jobs))\r\n}, [jobs])\r\n\r\n\r\n\r\nreturn (\r\n    <div>\r\n        {/* <img \r\n                 className='pencil_img' \r\n       src={pencilimg}\r\n       /> */}\r\n        <form className='search' onSubmit={handleAdd}>\r\n\r\n            <input type=\"text\"\r\n            className='taskbar'\r\n\r\n                placeholder=\"add job\"\r\n                onChange={(e) => setTask(e.target.value)}\r\n                value={task}\r\n>\r\n\r\n</input>\r\n           \r\n\r\n        </form>\r\n        <View jobs={jobs} deleteJob={deleteJob} />\r\n    </div>\r\n)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Storage "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AAAA;AAGzB,MAAMC,OAAO,GAAG,MAAM;EAAA;EAGtB,MAAMC,OAAO,GAAG,MAAM;IAElB,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIF,IAAI,EAAE;MACN,OAAOG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;IAC3B,CAAC,MAAM;MACH,OAAO,EAAE;IACb;EACJ,CAAC;EAEG,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAACI,OAAO,EAAE,CAAC;EAE3C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAGpC,MAAMc,SAAS,GAAIC,CAAC,IAAK;IACrBA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAIC,GAAG,GAAG;MACLC,EAAE;MACFN;IACL,CAAC;IAGLD,OAAO,CAAC,CAAC,GAAGM,GAAG,EAAEP,IAAI,CAAC,CAAC;IACvBG,OAAO,CAAC,EAAE,CAAC;EACf,CAAC;EAED,MAAMM,SAAS,GAAID,EAAE,IAAK;IACtB,MAAME,UAAU,GAAGV,IAAI,CAACW,MAAM,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MAC/C,OAAOD,OAAO,CAACJ,EAAE,KAAKA,EAAE;IAC5B,CAAC,CAAC;IAEFP,OAAO,CAACS,UAAU,CAAC;EACvB,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZK,YAAY,CAACkB,OAAO,CAAC,MAAM,EAAEhB,IAAI,CAACiB,SAAS,CAACf,IAAI,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAIV,oBACI;IAAA,wBAKI;MAAM,SAAS,EAAC,QAAQ;MAAC,QAAQ,EAAEI,SAAU;MAAA,uBAEzC;QAAO,IAAI,EAAC,MAAM;QAClB,SAAS,EAAC,SAAS;QAEf,WAAW,EAAC,SAAS;QACrB,QAAQ,EAAGC,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACW,MAAM,CAACC,KAAK,CAAE;QACzC,KAAK,EAAEf;MAAK;QAAA;QAAA;QAAA;MAAA;IAGpB;MAAA;MAAA;MAAA;IAAA,QAGO,eACP,QAAC,IAAI;MAAC,IAAI,EAAEF,IAAK;MAAC,SAAS,EAAES;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACxC;AAEV,CAAC;AAAA,GApEKhB,OAAO;AAAA,KAAPA,OAAO;AA0Eb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}