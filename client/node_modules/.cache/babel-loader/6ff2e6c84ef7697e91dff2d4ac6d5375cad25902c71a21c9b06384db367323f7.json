{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport './todo.css';\nimport { useState, useEffect } from \"react\";\nconst Storage = props => {\n  _s();\n  const [task, setTask] = useState([{\n    text: 'do dishes',\n    completed: false\n  }, {\n    text: 'mop',\n    completed: false\n  }]);\n  return useEffect(() => {\n    localStorage.setItem(\"task\", JSON.stringify(task));\n  }, [task])\n\n  //    <div className='storage'>\n  //       <p> Storage things to add</p>\n\n  // </div>\n  ;\n};\n_s(Storage, \"DUYHKujPtWgHeEFuhqLxU8EmcZs=\");\n_c = Storage;\nexport default Storage;\nvar _c;\n$RefreshReg$(_c, \"Storage\");","map":{"version":3,"names":["React","useState","useEffect","Storage","props","task","setTask","text","completed","localStorage","setItem","JSON","stringify"],"sources":["C:/Users/lploe/to-do/src/components/To-do/LocalStorage.jsx"],"sourcesContent":["import React from 'react';\r\nimport './todo.css';\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nconst Storage = (props) => {\r\n    const [task, setTask] = useState([{\r\n        text: 'do dishes',\r\n        completed: false\r\n    }, {\r\n        text: 'mop',\r\n        completed: false\r\n    }\r\n    ])\r\n\r\n\r\n    return (\r\n\r\n        useEffect(() => {\r\n            localStorage.setItem(\"task\", JSON.stringify(task))\r\n        }, [task])\r\n\r\n\r\n        //    <div className='storage'>\r\n        //       <p> Storage things to add</p>\r\n\r\n\r\n        // </div>\r\n    )\r\n};\r\nexport default Storage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAG3C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,CAAC;IAC9BM,IAAI,EAAE,WAAW;IACjBC,SAAS,EAAE;EACf,CAAC,EAAE;IACCD,IAAI,EAAE,KAAK;IACXC,SAAS,EAAE;EACf,CAAC,CACA,CAAC;EAGF,OAEIN,SAAS,CAAC,MAAM;IACZO,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,IAAI,CAAC;;EAGT;EACA;;EAGA;EAAA;AAER,CAAC;AAAC,GAxBIF,OAAO;AAAA,KAAPA,OAAO;AAyBb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}